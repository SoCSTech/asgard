name: API - Build and Publish Docker Image

on:
  push:
    branches:
      - main
    paths:
      - api/**
  pull_request:
    branches:
      - main
    paths:
      - api/**
  workflow_dispatch:

jobs:
  api-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Node Modules
        run: npm ci

      - name: Run Jest
        run: npm test

  api-build:
    runs-on: ubuntu-latest
    needs: api-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/socstech/asgard-api

      - name: Build and Push Production Docker Image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: ./api
          file: ./api/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ghcr.io/socstech/asgard-api:latest
            ghcr.io/socstech/asgard-api:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and Push Pull Request Docker Image
        if: ${{ github.event_name == 'pull_request' }}
        id: pr-build-and-push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: ./api
          file: ./api/Dockerfile
          push: true
          # tags: |
          #   ghcr.io/socstech/asgard-api:pr-${{ github.event.number }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            EXPIRE_AFTER=14d
